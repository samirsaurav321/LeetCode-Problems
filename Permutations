"""
Given a collection of distinct integers, return all possible permutations.

Example:

Input: [1,2,3]
Output:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]
"""

import itertools
class Solution:
    
    def permute(self,nums):
        if len(nums)==0:
                return []
        elif len(nums)==1:
                return [nums]

        else:
            list1=[]
            for i in range(len(nums)):
                x=nums[i]
                xs= nums[:i]+nums[i+1:]

                for p in self.permute(xs):

                    list1.append([x]+p)

            return list1
            
 if __name__=='__main__':

    s = Solution

    nums = [1,1,2]

    print(s.longestCommonPrefix(s,nums))
    
       # output --> [
                      [1,2,3],
                      [1,3,2],
                      [2,1,3],
                      [2,3,1],
                      [3,1,2],
                      [3,2,1]
                    ]
